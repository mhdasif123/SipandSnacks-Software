{"ast":null,"code":"import{storage}from'../types';// Utility functions to access historical data\nexport const getHistoricalData=()=>{const orders=storage.getOrders();const employees=storage.getEmployees();const teaItems=storage.getTeaItems();const snackItems=storage.getSnackItems();return{orders,employees,teaItems,snackItems,totalOrders:orders.length,totalRevenue:orders.reduce((sum,order)=>sum+order.amount,0),uniqueDates:Array.from(new Set(orders.map(order=>order.orderDate))).sort().reverse(),ordersByDate:orders.reduce((acc,order)=>{if(!acc[order.orderDate]){acc[order.orderDate]=[];}acc[order.orderDate].push(order);return acc;},{}),ordersByEmployee:orders.reduce((acc,order)=>{if(!acc[order.employeeName]){acc[order.employeeName]=[];}acc[order.employeeName].push(order);return acc;},{})};};// Get data for a specific date range\nexport const getDataForDateRange=(fromDate,toDate)=>{const orders=storage.getOrders();const from=new Date(fromDate);const to=new Date(toDate);return orders.filter(order=>{const orderDate=new Date(order.orderDate);return orderDate>=from&&orderDate<=to;});};// Get data for a specific employee\nexport const getDataForEmployee=employeeName=>{const orders=storage.getOrders();return orders.filter(order=>order.employeeName===employeeName);};// Get data for a specific date\nexport const getDataForDate=date=>{const orders=storage.getOrders();return orders.filter(order=>order.orderDate===date);};// Export all data as JSON\nexport const exportAllDataAsJSON=()=>{const data=getHistoricalData();const jsonString=JSON.stringify(data,null,2);// Create and download file\nconst blob=new Blob([jsonString],{type:'application/json'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=\"sip-and-snacks-data-\".concat(new Date().toISOString().split('T')[0],\".json\");document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);};// Get summary statistics\nexport const getSummaryStats=()=>{const data=getHistoricalData();return{totalDays:data.uniqueDates.length,totalOrders:data.totalOrders,totalRevenue:data.totalRevenue,averageOrderValue:data.totalOrders>0?data.totalRevenue/data.totalOrders:0,averageOrdersPerDay:data.uniqueDates.length>0?data.totalOrders/data.uniqueDates.length:0,mostPopularTea:getMostPopularItem(data.orders,'tea'),mostPopularSnack:getMostPopularItem(data.orders,'snack'),mostActiveEmployee:getMostActiveEmployee(data.ordersByEmployee)};};const getMostPopularItem=(orders,itemType)=>{const counts={};orders.forEach(order=>{counts[order[itemType]]=(counts[order[itemType]]||0)+1;});return Object.entries(counts).reduce((a,b)=>counts[a[0]]>counts[b[0]]?a:b,['',0]);};const getMostActiveEmployee=ordersByEmployee=>{const employeeCounts=Object.entries(ordersByEmployee).map(_ref=>{let[name,orders]=_ref;return{name,count:orders.length,totalAmount:orders.reduce((sum,order)=>sum+order.amount,0)};});return employeeCounts.reduce((a,b)=>a.count>b.count?a:b,{name:'',count:0,totalAmount:0});};","map":{"version":3,"names":["storage","getHistoricalData","orders","getOrders","employees","getEmployees","teaItems","getTeaItems","snackItems","getSnackItems","totalOrders","length","totalRevenue","reduce","sum","order","amount","uniqueDates","Array","from","Set","map","orderDate","sort","reverse","ordersByDate","acc","push","ordersByEmployee","employeeName","getDataForDateRange","fromDate","toDate","Date","to","filter","getDataForEmployee","getDataForDate","date","exportAllDataAsJSON","data","jsonString","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","concat","toISOString","split","body","appendChild","click","removeChild","revokeObjectURL","getSummaryStats","totalDays","averageOrderValue","averageOrdersPerDay","mostPopularTea","getMostPopularItem","mostPopularSnack","mostActiveEmployee","getMostActiveEmployee","itemType","counts","forEach","Object","entries","a","b","employeeCounts","_ref","name","count","totalAmount"],"sources":["D:/My_Projects/SipandSnacks/src/utils/dataUtils.ts"],"sourcesContent":["import { storage, Order } from '../types';\r\n\r\n// Utility functions to access historical data\r\nexport const getHistoricalData = () => {\r\n  const orders = storage.getOrders();\r\n  const employees = storage.getEmployees();\r\n  const teaItems = storage.getTeaItems();\r\n  const snackItems = storage.getSnackItems();\r\n\r\n  return {\r\n    orders,\r\n    employees,\r\n    teaItems,\r\n    snackItems,\r\n    totalOrders: orders.length,\r\n    totalRevenue: orders.reduce((sum: number, order: Order) => sum + order.amount, 0),\r\n    uniqueDates: Array.from(new Set(orders.map((order: Order) => order.orderDate))).sort().reverse(),\r\n    ordersByDate: orders.reduce((acc: {[key: string]: Order[]}, order: Order) => {\r\n      if (!acc[order.orderDate]) {\r\n        acc[order.orderDate] = [];\r\n      }\r\n      acc[order.orderDate].push(order);\r\n      return acc;\r\n    }, {} as {[key: string]: Order[]}),\r\n    ordersByEmployee: orders.reduce((acc: {[key: string]: Order[]}, order: Order) => {\r\n      if (!acc[order.employeeName]) {\r\n        acc[order.employeeName] = [];\r\n      }\r\n      acc[order.employeeName].push(order);\r\n      return acc;\r\n    }, {} as {[key: string]: Order[]})\r\n  };\r\n};\r\n\r\n// Get data for a specific date range\r\nexport const getDataForDateRange = (fromDate: string, toDate: string) => {\r\n  const orders = storage.getOrders();\r\n  const from = new Date(fromDate);\r\n  const to = new Date(toDate);\r\n  \r\n  return orders.filter((order: Order) => {\r\n    const orderDate = new Date(order.orderDate);\r\n    return orderDate >= from && orderDate <= to;\r\n  });\r\n};\r\n\r\n// Get data for a specific employee\r\nexport const getDataForEmployee = (employeeName: string) => {\r\n  const orders = storage.getOrders();\r\n  return orders.filter((order: Order) => order.employeeName === employeeName);\r\n};\r\n\r\n// Get data for a specific date\r\nexport const getDataForDate = (date: string) => {\r\n  const orders = storage.getOrders();\r\n  return orders.filter((order: Order) => order.orderDate === date);\r\n};\r\n\r\n// Export all data as JSON\r\nexport const exportAllDataAsJSON = () => {\r\n  const data = getHistoricalData();\r\n  const jsonString = JSON.stringify(data, null, 2);\r\n  \r\n  // Create and download file\r\n  const blob = new Blob([jsonString], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = `sip-and-snacks-data-${new Date().toISOString().split('T')[0]}.json`;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\n// Get summary statistics\r\nexport const getSummaryStats = () => {\r\n  const data = getHistoricalData();\r\n  \r\n  return {\r\n    totalDays: data.uniqueDates.length,\r\n    totalOrders: data.totalOrders,\r\n    totalRevenue: data.totalRevenue,\r\n    averageOrderValue: data.totalOrders > 0 ? data.totalRevenue / data.totalOrders : 0,\r\n    averageOrdersPerDay: data.uniqueDates.length > 0 ? data.totalOrders / data.uniqueDates.length : 0,\r\n    mostPopularTea: getMostPopularItem(data.orders, 'tea'),\r\n    mostPopularSnack: getMostPopularItem(data.orders, 'snack'),\r\n    mostActiveEmployee: getMostActiveEmployee(data.ordersByEmployee)\r\n  };\r\n};\r\n\r\nconst getMostPopularItem = (orders: Order[], itemType: 'tea' | 'snack') => {\r\n  const counts: {[key: string]: number} = {};\r\n  orders.forEach((order: Order) => {\r\n    counts[order[itemType]] = (counts[order[itemType]] || 0) + 1;\r\n  });\r\n  \r\n  return Object.entries(counts).reduce((a, b) => counts[a[0]] > counts[b[0]] ? a : b, ['', 0]);\r\n};\r\n\r\nconst getMostActiveEmployee = (ordersByEmployee: {[key: string]: Order[]}) => {\r\n  const employeeCounts = Object.entries(ordersByEmployee).map(([name, orders]) => ({\r\n    name,\r\n    count: orders.length,\r\n    totalAmount: orders.reduce((sum: number, order: Order) => sum + order.amount, 0)\r\n  }));\r\n  \r\n  return employeeCounts.reduce((a, b) => a.count > b.count ? a : b, { name: '', count: 0, totalAmount: 0 });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}